
                <div class="form-group col-md-4">
                <input type="file" class="file" accept=".xlsx,.xls" style="width:400px;" id="fileuploader" />

            </div>
            <div class="form-group col-md-4">
                <button type="button" id="btnUpload" class="mybtn" style="margin-left:1px;width:120px;height:34px;align-items:center" onclick="Upload()">
                    <span class="glyphicon glyphicon-upload"></span> Upload
                </button>
                <button type="button" id="btnclear" class="mybtn" style="margin-left:1px;width:120px;height:34px;align-items:center" onclick="onSaveFile()">
                    <span class="glyphicon glyphicon-save"></span> บันทึกข้อมูล
                </button>
            </div>

            
----------------------------------------------------------------
function Upload() {

        var fileUpload = $('#fileuploader').get(0);
            var files = fileUpload.files[0];
            var fileData = new FormData();
            fileData.append(files.name, files);
            $.ajax({
                url: '@Url.Action("FileUpload", "HOME")',
                type: 'POST',
                processData: false,  // tell jQuery not to process the data
                contentType: false,
                //async: false,
                data: fileData,
                success: function (result) {
                    $('#bindData').empty();
                    $('#bindData').html(result);
                },
                error: function (err) {
                }
            })
    }
    
    ------------------------------------------------------------------------------------------------
    public ActionResult FileUpload(HttpPostedFileBase fileuploader,string userName)
        {
            var ff = Request.Files.Count;
            ViewBag.FILE_IMPORT_INVALIDCollection = new UploadAdvancePremiumSvc.FILE_IMPORT_INVALIDCollection();
            try
            {
                UploadAdvancePremiumSvc.FILE_IMPORTCollection model = new UploadAdvancePremiumSvc.FILE_IMPORTCollection();
                string result = "";
                DataSet ds = new DataSet();
                if (fileuploader != null && fileuploader.ContentLength > 0)
                {
                    // DataFile dd = fileuploader;


                    string fileExtension = System.IO.Path.GetExtension(fileuploader.FileName);


                    if (fileExtension == ".xls" || fileExtension == ".xlsx")
                    {
                        // extract only the filename
                        var fileName = Path.GetFileName(fileuploader.FileName);

                        string fileLocation = Server.MapPath("~/App_Data//") + fileuploader.FileName;
                        if (System.IO.File.Exists(fileLocation))
                        {
                            System.IO.File.Delete(fileLocation);
                        }
                        var path = Path.Combine(Server.MapPath("~/App_Data"), fileName);
                        fileuploader.SaveAs(path);

                        //#region ดึงข้อมูลจาก excel
                        //// read text file
                        //List<FormatFile_ValueModel> liobj = new List<FormatFile_ValueModel>();

                        //FileStream stream = new FileStream(path, FileMode.Open, FileAccess.Read);
                        //IExcelDataReader excelReader;

                        //if (fileExtension == ".xlsx")
                        //{
                        //    //2. Reading from a OpenXml Excel file 
                        //    //(2007 format; *.xlsx)
                        //    excelReader = ExcelReaderFactory.CreateOpenXmlReader(stream);

                        //}  //...
                        //else
                        //{
                        //    //1. Reading from a binary Excel file 
                        //    //('97-2003 format; *.xls)
                        //    excelReader = ExcelReaderFactory.CreateBinaryReader(stream);
                        //}
                        //excelReader.IsFirstRowAsColumnNames = true;
                        //DataSet DataResult = excelReader.AsDataSet();

                        var excelFile = new ExcelQueryFactory(path);
                        ViewData["Path"] = excelFile.FileName;
                        //FormatFile_ValueModelCollection model = new FormatFile_ValueModelCollection();
                        //List<FormatFile_ValueModel> f = new List<FormatFile_ValueModel>();
                        DateTime dt = System.DateTime.Now;
                        string dt_str = dt.ToShortDateString();
                        ViewData["UploadDate"] = dt_str;
                        model = ReadFile(path, dt_str, "ทดสอบ");


                        **
                        #endregion
                    }
                    else
                    {

                        return Json("รูปแบบไฟล์ ไม่ถูกต้อง");
                    }
                }
                //return Json(true);
                return PartialView("_Details", model);
                
            }
            catch (Exception ex)
            {
                return Json(ex);
            }

        }
    ---------------------------------------------------------------------------------------------------
    private UploadAdvancePremiumSvc.FILE_IMPORTCollection ReadFile(string path,string uploadDate,string Uploader)
        {
            UploadAdvancePremiumSvc.FILE_IMPORTCollection model = new UploadAdvancePremiumSvc.FILE_IMPORTCollection();
            var excelFile = new ExcelQueryFactory(path);
            UploadAdvancePremiumSvc.FILE_IMPORT currentModel;
            var worksheet = (from e in excelFile.Worksheet(0) select e).ToList();

            int i = 0;
            foreach (var item in worksheet)
            {
                if (string.IsNullOrEmpty(item["policy"]) || string.IsNullOrEmpty(item["pol_yr"]))
                {
                    continue;
                }
                currentModel = new UploadAdvancePremiumSvc.FILE_IMPORT();
                currentModel.policy = lpad(item["policy"].ToString(), "0", 8); // เติม format policyNo 00000000
                currentModel.PVpremium = item["PV premium"].ToString();
                currentModel.pol_yr = item["pol_yr"].ToString();
                currentModel.pol_lt = item["pol_lt"].ToString();
                currentModel.outstanding_advance_premium = item["outstanding advance premium"].ToString();
                currentModel.discount = item["discount"].ToString();
                currentModel.Uploader = Uploader;
                currentModel.UploadDate = uploadDate;
                currentModel.seq = ++i;
                model.Add(currentModel);
            }
            return model;
        }
